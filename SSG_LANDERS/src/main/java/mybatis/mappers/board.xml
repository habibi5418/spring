<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.board">
	
	<select id="findRecent5" resultType="Board">
		select rownum, sub.*
    	FROM (
	    	select * 
		    from board 
		    where delete_yn = 'N' 
		    order by boardid desc
		) sub
		<![CDATA[
		where rownum <= 5
		]]>
	</select>
	
	<select id="getTotalCount" resultType="Board">
		select count(*) totalCount
	    from board 
	    where delete_yn = 'N'
	    <if test="searchText != '' and searchText != null">
	    	<choose>
		    	<when test="searchType == 'title'">
		    		and title like concat(concat('%', #{searchText}), '%')
		    	</when>
		    	<when test="searchType == 'contents'">
		    		and contents like concat(concat('%', #{searchText}), '%')
		    	</when>
		    	<when test="searchType == 'writer_uid'">
		    		and writer_uid like concat(concat('%', #{searchText}), '%')
		    	</when>
	    	</choose>
	    </if>
	</select>

	<select id="getAllBoardPageList" resultType="Board">
		select * 
	    from ( 
	        select rownum nrow, n.* 
	        from ( 
				select level, pid, boardid, title, writer_uid, reg_date, view_count, exist_file existFile 
				from board 
				where delete_yn = 'N' 
				<if test="boardid != 0">
					<![CDATA[
						and boardid > #{boardid}
					]]>
				</if>
		    	<if test="searchText != '' and searchText != null">
			    	<choose>
				    	<when test="searchType == 'title'">
				    		and title like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'contents'">
				    		and contents like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'writer_uid'">
				    		and writer_uid like concat(concat('%', #{searchText}), '%')
				    	</when>
			    	</choose>
			    </if>
			    start with pid=0
				CONNECT BY PRIOR boardid = pid
				order SIBLINGS by boardid desc  
			) n 
			<![CDATA[
			where rownum <= #{endNo}
			]]>
		) 
		where nrow between #{startNo} and #{endNo}
	</select>
	
	<select id="getAllBoardPageListByViewCount" resultType="Board">
		select * 
	    from ( 
	        select rownum nrow, n.* 
	        from ( 
				select level, pid, boardid, title, writer_uid, reg_date, view_count, exist_file existFile 
				from board 
				where delete_yn = 'N' 
				<if test="boardid != 0">
					<![CDATA[
						and boardid > #{boardid}
					]]>
				</if>
		    	<if test="searchText != '' and searchText != null">
			    	<choose>
				    	<when test="searchType == 'title'">
				    		and title like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'contents'">
				    		and contents like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'writer_uid'">
				    		and writer_uid like concat(concat('%', #{searchText}), '%')
				    	</when>
			    	</choose>
			    </if>
			    start with pid=0
				CONNECT BY PRIOR boardid = pid
				order SIBLINGS by view_count desc, boardid desc  
			) n 
			<![CDATA[
			where rownum <= #{endNo}
			]]>
		) 
		where nrow between #{startNo} and #{endNo}
	</select>
	
	<update id="increaseViews">
		update board
		set view_count = view_count + 1 
		where boardid = #{boardid}
	</update>
	
	<select id="getAllBoardList" resultType="Board">
		select * 
	    from board 
	    where delete_yn = 'N' 
	    order by boardid desc
	</select>
	
	<select id="getAllBoardListByViewCount" resultType="Board">
		select * 
	    from board 
	    where delete_yn = 'N' 
	    order by view_count desc, boardid desc
	</select>
	
	
	<select id="getBoardByBoardid" resultType="Board">
		SELECT *
	    FROM board
	    WHERE boardid = #{boardid}
	    AND delete_yn = 'N'
	</select>

	<select id="getMoreBoardPageList" resultType="Board">
		select * 
		from ( 
			select rownum nrow, n.* 
			from (
	            select * 
	            from board 
	            where delete_yn = 'N' 
		    	<if test="searchText != '' and searchText != null">
			    	<choose>
				    	<when test="searchType == 'title'">
				    		and title like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'contents'">
				    		and contents like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'writer_uid'">
				    		and writer_uid like concat(concat('%', #{searchText}), '%')
				    	</when>
			    	</choose>
			    </if>
			    <![CDATA[
	            and boardid < #{boardid}
	            order by boardid desc 
	        ) n 
	        where rownum <= #{endNo}
	        ]]>
	    ) 
		where nrow between #{startNo} and #{endNo}
	</select>

	<select id="getMoreBoardPageListByViewCount" resultType="Board">
		select * 
		from ( 
			select rownum nrow, n.* 
			from (
	            select * 
	            from board 
	            where delete_yn = 'N' 
		    	<if test="searchText != '' and searchText != null">
			    	<choose>
				    	<when test="searchType == 'title'">
				    		and title like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'contents'">
				    		and contents like concat(concat('%', #{searchText}), '%')
				    	</when>
				    	<when test="searchType == 'writer_uid'">
				    		and writer_uid like concat(concat('%', #{searchText}), '%')
				    	</when>
			    	</choose>
			    </if>
			    <choose>
				    <when test="view_count == 0">
			    		and view_count = 0 and boardid not in 
						<foreach collection="currentBoards" item="item" index="index" open="(" close=")" separator=",">
							#{item}
						</foreach>	
				    </when>
				    <otherwise>
					    <![CDATA[
			            and view_count <  #{view_count}
	        			]]>
				    </otherwise>
			    </choose>
	            order by view_count desc, boardid desc 
	        ) n 
		    <![CDATA[
	        where rownum <= #{endNo}
	        ]]>
	    ) 
		where nrow between #{startNo} and #{endNo}
	</select>
	
	<insert id="writeBoard">
		insert into board(boardid, title, contents, writer_uid, exist_file)
    	VALUES (seq_board.nextval, #{title}, #{contents}, #{writer_uid}, #{existFile})
	</insert>
	
	<select id="getWriteBoard" resultType="Board">
		select boardid 
		from board
		order by boardid desc
	</select>
	
	<update id="updateBoard">
		update board
		set title = #{title}, contents = #{contents}, mod_date = sysdate, exist_file = #{existFile}
		where boardid = #{boardid}
	</update>
	
	<update id="deleteBoard">
	    update board 
	    set delete_yn = 'Y' 
	    where boardid = #{boardid}
	</update>
	
	<update id="deleteBoards">
		update board 
		set delete_yn = 'Y' 
		where boardid in 
		<foreach collection="deleteBoards" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>	
	</update>
	
	<insert id="replyBoard">
		insert into board(boardid, title, contents, writer_uid, pid, existFile)
    	VALUES (seq_board.nextval, #{title}, #{contents}, #{writer_uid}, #{pid}, #{existFile})
	</insert>
	
	<insert id="commentBoard">
		insert into reply_comment(replyid, boardid, contents, writer_uid, reg_date)
    	VALUES (seq_comment.nextval, #{boardid}, #{contents}, #{writer_uid}, sysdate)
	</insert>
	
	<select id="getCommentBoard" resultType="Board">
		select rownum nrow, n.* 
		from (
            select * 
            from reply_comment 
			where boardid = #{boardid}
            <if test="replyid != 0">
			    <![CDATA[
	            and replyid < #{replyid}
        		]]>
            </if>
            order by replyid desc 
        ) n 
	    <![CDATA[
        where rownum <= 10
        ]]>
	</select>
	
	<select id="getWriteComment" resultType="Board">
		select rownum nrow, n.* 
		from (
            select * 
            from reply_comment 
			where boardid = #{boardid}
            <if test="replyid != 0">
			    <![CDATA[
	            and replyid < #{replyid}
        		]]>
            </if>
            order by replyid desc 
        ) n 
	    <![CDATA[
        where rownum <= 1
        ]]>
	</select>
	
	<update id="updateComment">
		update reply_comment
		set contents = #{contents}, reg_date = sysdate 
    	where replyid = #{replyid}
	</update>
	
	<delete id="deleteComment">
		delete from reply_comment
    	where replyid = #{replyid}
	</delete>
	
</mapper>